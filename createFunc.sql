SET SCHEMA FN71168;

-------------------------------------
--PRESMQTA BORQ NA PRODADENITE BILETI
-------------------------------------
   CREATE FUNCTION TICKET_COUNT ( T_ID CHAR(7))
     RETURNS INT
     LANGUAGE SQL
     RETURN
       SELECT COUNT(TICKET_ID) 
         FROM TICKET;

--DROP FUNCTION TICKET_COUNT;      
SELECT distinct FN71168.TICKET_COUNT(TICKET_ID) AS NUMBER
  FROM TICKET;

----------------------------------------------
--PRESMQTANE NA PRIHODITE OT PRODADENITE BILETI
----------------------------------------------
CREATE FUNCTION INCOME( T_ID CHAR(7))
	RETURNS  DECIMAL(8,2)
	RETURN 
		SELECT SUM(PRICE)
			FROM TICKET;
			
--DROP FUNCTION INCOME;
SELECT DISTINCT FN71168.INCOME(TICKET_ID) AS INCOME
  FROM TICKET;


---------------------------------------
-- KONKATENIRA IMETO I FAMILIQTA
----------------------------------------
CREATE FUNCTION CONCAT_NAMES (NAME VARCHAR(15), FAMILY_NAME VARCHAR(20))
 RETURNS VARCHAR(40)
 RETURN NAME || ' ' || FAMILY_NAME;

--DROP FUNCTION CONCAT_NAMES;
SELECT FN71168.CONCAT_NAMES(NAME, FAMILY_NAME) AS FULL_NAME
  FROM PASSENGER;

----------------------------------------------------
--PO ZADADEN KOD NA GARA, SE VRY6TA IMETO I ADRESA I
---------------------------------------------------
CREATE FUNCTION STATION_INFO (ST_ID CHAR(5))
     RETURNS TABLE (STATION_ID CHAR(5),
                    NAME VARCHAR(40),
                    SITUATION VARCHAR(80))
     LANGUAGE SQL
     READS SQL DATA
     NO EXTERNAL ACTION
     DETERMINISTIC
     RETURN
       SELECT STATION_ID, NAME, SITUATION
         FROM STATION
         WHERE STATION.STATION_ID = STATION_INFO.ST_ID;


  
------------------------------------------------------------------------------------
--PO ZADADENO IME NA GARA SE VRY6TA INF ZA VSI4KI VLAKOVE ZA PYTNICI(IME,ID,CATEGORIQ I TIP,RAZPISANIE)
-- KOITO TRYGVAT OT NEQ SLED 10 4ASA
-------------------------------------------------------------------------------------

CREATE FUNCTION TRAIN_INFO_TT (ST_FROM VARCHAR(40))
     RETURNS TABLE (TRAIN_ID CHAR(7),
                    TRAIN_NAME VARCHAR(15),
                    TRAIN_TYPE VARCHAR(40),
                    TRAIN_CATEGORY VARCHAR(80),
                    DEPARTURE_TIME TIME)
     LANGUAGE SQL
     READS SQL DATA
     NO EXTERNAL ACTION
     DETERMINISTIC
     RETURN
       SELECT DISTINCT TRAIN_ID, TRAIN_NAME, TRAIN_TYPE, TRAIN_CATEGORY, DEPARTURE_TIME
         FROM TRAIN JOIN TIME_TABLE ON TRAIN_ID=TRAIN_REF JOIN ROUTE ON ROUTE_ID=ROUTE_REF JOIN STATION ON STATION_ID=STATION_FROM 
         WHERE HOUR(DEPARTURE_TIME)>10 AND TRAIN_TYPE NOT LIKE 'FREIGHT'
       AND CHAR(STATION.NAME)= CHAR(TRAIN_INFO_TT.ST_FROM); 

--DROP FUNCTION TRAIN_INFO;

				
-------------------------------------------------------------------------------------------------------
--PO DADENO IME NA NACHALNA I KRAINA GARA, DA SE IZVEDAT CENITE NA BILETA VYV VSICHKi KLASI )
-------------------------------------------------------------------------------------------------------
CREATE FUNCTION FIRST_CLASS_T(ST_FROM VARCHAR(40),ST_TO VARCHAR(40))
	RETURNS TABLE(TRAIN_ID CHAR(4),
				  DEPARTURE_TIME TIME,
				  ARRIVING_TIME TIME,
	  			  CLASS_TYPE VARCHAR(20),
				  PRICE DECIMAL(8,2),
				  TRAIN_CATEGORY VARCHAR(20),
				  TYPE_TT VARCHAR(6))
	 LANGUAGE SQL
     READS SQL DATA
     NO EXTERNAL ACTION
     DETERMINISTIC
     RETURN
        SELECT TRAIN_ID, DEPARTURE_TIME, ARRIVING_TIME, CLASS_TYPE, PRICE, TRAIN.TRAIN_CATEGORY, TYPE_TT
        FROM TRAIN JOIN TIME_TABLE ON TRAIN_ID=TIME_TABLE.TRAIN_REF
        JOIN ROUTE ON ROUTE_REF=ROUTE_ID JOIN STATION ON ROUTE.STATION_FROM=STATION_ID
        JOIN TICKET ON TICKET.TRAIN_REF=TRAIN_ID JOIN CLASS ON CLASS_REF=CLASS_TYPE
        WHERE 
        ROUTE.STATION_FROM = (
        SELECT STATION_ID
        FROM STATION
        WHERE char(NAME)=char(ST_FROM))
        AND
        ROUTE.STATION_TO = (
        SELECT STATION_ID
        FROM STATION
        WHERE char(NAME)=char(ST_TO));
        
     